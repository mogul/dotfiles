#!/bin/bash

# Install expected packages on Mac and configure preferences/services

# TODO: Provide a top-level invocation script to clone the repository that this script is in and then run this script
# TODO: Suppress warning/error output
# TODO: Improve progress output from bundle (-v should do it)
# TODO: Provide a dry-run option


# Make sure homebrew is installed
if ! command -v brew >/dev/null; then
  echo "Installing Homebrew ..."
  curl -fsS \
      'https://raw.githubusercontent.com/Homebrew/install/master/install' | ruby
else
  echo "Homebrew already installed. Skipping ..."
fi

# Make sure everything's up to date
echo "Updating brew formulae..."
brew update

# Make sure homebrew bundle command is tapped and available
brew tap Homebrew/bundle

# Get all of our taps, formulae, and casks installed

# Make sure we can handle casks
brew tap 'caskroom/versions'
brew install 'caskroom/cask/brew-cask'

for BREWFILE in `find ./bootstrap -name \*.Brewfile`
do
	[ -f "$BREWFILE" ] && echo "Bundling $BREWFILE..." && brew bundle -v --file="$BREWFILE"
	# TODO: Look for a corresponding foo.sh to run after each foo.Brewfile
done

## TODO: Move commented post-processing steps below into appropriate bootstrap/foo.sh files!

# 18F post-processing
# Start up services often needed by developers
# Really this should be handled via Docker and Kitematic in order to handle versioning
# in dev the same way it's handled in qa/stg/prod
#

# echo 'Restarting postgres...'
# brew services restart postgresql

# echo 'Restarting mysql...'
# brew services restart mysql
# sleep 2
# mysql.server start

# echo 'Restarting redis...'
# brew services restart redis

# There's more setup to do around rvm, etc. per the 18F/laptop script
# TODO

# get git-crypt setup so that ssh/gpg keys are decrypted
# TODO

# Install Oh My Zsh
sh -c "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"

# Get github access set up
if [ ! -f "$HOME/.ssh/github_rsa.pub" ]; then

 	open ~/Applications/GitHub.app
fi

# Notes on stuff to break out/automate later
#
# I like setting the "Solarized Darcula with Background Image" iTerm2 theme; how do I capture/restore my terminal prefs?
# Install the "agnoster" Zsh theme, along with the "Inconsolata" Powerline font
# export DEFAULT_USER=$USER somewhere to hide redundant prompt info
